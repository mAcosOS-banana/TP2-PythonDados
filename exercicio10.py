# ExercÃ­cio 10
"""
Uma empresa de tecnologia quer analisar a performance de seus vendedores com base nas vendas realizadas durante o mÃªs. Eles pediram que vocÃª desenvolva um programa para processar os dados de vendas e exibir o ranking dos vendedores com base no nÃºmero de vendas realizadas.
VocÃª deve criar uma funÃ§Ã£o ranking_vendedores(vendedores) que receba uma lista de tuplas. Cada tupla contÃ©m dois elementos: o nome do vendedor (uma string) e o nÃºmero de vendas realizadas (um nÃºmero inteiro). A funÃ§Ã£o deve retornar uma lista com os nomes dos vendedores ordenados do maior para o menor nÃºmero de vendas. Se dois vendedores tiverem o mesmo nÃºmero de vendas, eles devem ser ordenados em ordem alfabÃ©tica.
"""

import random

randomizer = [random.randint(0,100) for i in range(5)]
vendedores = [("Alice", randomizer[0]), ("Bob", randomizer[1]), ("Carlos", randomizer[2]), ("Diana", randomizer[3]), ("Eva", randomizer[4])]


def ranking_vendedores(vendedores):
    dicio = {}
    contador = 0
    for i in vendedores:
        dicio[i[0]] = i[1]
        dicio = dict(sorted(dicio.items(), key=lambda item: item[1],reverse=True))
    for idx, i in enumerate(list(dicio.items())):
        contador += 1
        match contador:
            case 1:
                print(f'ğŸ¥‡ {list(dicio.keys())[idx]:<6}', f'{"ğŸŸ¦"*(list(dicio.items())[idx][1]//2)}', f'{list(dicio.values())[idx]} vendas')
            case 2:
                print(f'ğŸ¥ˆ {list(dicio.keys())[idx]:<6}', f'{"ğŸŸ¦"*(list(dicio.items())[idx][1]//2)}', f'{list(dicio.values())[idx]} vendas')
            case 3:
                print(f'ğŸ¥‰ {list(dicio.keys())[idx]:<6}', f'{"ğŸŸ¦"*(list(dicio.items())[idx][1]//2)}', f'{list(dicio.values())[idx]} vendas')
            case _:
                print(f' {contador} {list(dicio.keys())[idx]:<6}', f'{"ğŸŸ¦"*(list(dicio.items())[idx][1]//2)}', f'{list(dicio.values())[idx]} vendas')        


def main():
    resultado = ranking_vendedores(vendedores)
    print("Ordem dos melhores vendoedores:\n", resultado)
main()